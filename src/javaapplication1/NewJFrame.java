/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import static java.lang.Character.compare;
import java.util.ArrayList;
import java.util.Random;
import javax.print.DocFlavor;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import sun.text.normalizer.Utility;

/**
 *
 * @author Besoo
 */
public class NewJFrame extends javax.swing.JFrame {
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        jTable1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 102, 102));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DAY", "RUNDOM NUM", "SIMULATED DAILY DEMAND"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        jTable2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11)); // NOI18N
        jTable2.setForeground(new java.awt.Color(0, 102, 102));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DEMAND", "FREQUENCY", "PROPABILITY", "CUMULATIVE", "INTERVAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setCellSelectionEnabled(true);
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable2.setRowHeight(20);
        jScrollPane2.setViewportView(jTable2);

        jTextField3.setEditable(false);

        jTextField4.setEditable(false);

        jLabel1.setText("AVERAGE DAILY DEMAND");

        jLabel2.setText("Demand Per Day");

        jLabel3.setText("EXPECTED DAILY DEMAND");

        jLabel4.setText("Frequency (Days)");

        jLabel6.setText("HOW LONG DAYS YOU WANT TO SIMULATE");

        jLabel7.setText(" PUT THE INPUTS WITH ONE SPACES BETWEEN IT ... ");

        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
//TAKING INPUTS FROM USER
       
     String str1=jTextField1.getText().toString();
     String str2=jTextField2.getText().toString();

//     String []ch1=new String[str1.length()];
//     String []ch2=new String[str2.length()];
//     int counter=0;
//     int counter2=0;
//     char a=' ';
//     for (int i=0;i< str1.length();i++){
//     if( str1.charAt(i)==a ){
//         ch1[i]="0";
//         counter++;
//     }
//     else {ch1[i]=String.valueOf(str1.charAt(i));}
//     }
//     for (int i=0;i< str2.length();i++){
//     if( str2.charAt(i)==a ){
//         ch2[i]="0";
//           counter2++;
//     }
//     else ch2[i]=String.valueOf(str2.charAt(i));
//     }
//     int c=0,c2=0;
//     String []ch12=new String[ch1.length-counter];
//     String []ch22=new String[ch2.length-counter2];
//     for(int i=0;i<ch1.length;i++){
//       
//        if("0".equals(ch1[i])){
//            continue;
//        }
//        if("0".equals(ch1[i+1]))
//        {
//          ch12[c]=ch1[i];
//          c++;
//          continue;
//        }
//        if("0".equals(ch1[i+2]))
//        {
//          ch12[c]=ch1[i]+ch1[i+1];
//          i++;
//          c++;
//          continue;
//        }
//        if("0".equals(ch1[i+3]))
//        {
//          ch12[c2]=ch1[i]+ch1[i+1]+ch1[i+2];
//          i+=2;
//          c++;
//          continue;
//        }
//        if("0".equals(ch1[i+4]))
//        {
//          ch12[c2]=ch1[i]+ch1[i+1]+ch1[i+2]+ch1[i+3];
//          i+=3;
//          c++;
//          continue;
//        }
//        if("0".equals(ch1[i+5]))
//        {
//          ch12[c2]=ch1[i]+ch1[i+1]+ch1[i+2]+ch1[i+3]+ch1[i+4];
//          i+=4;
//          c++;
//        }
//     }
//     for(int i=0;i<ch2.length;i++){
//       
//        if("0".equals(ch2[i])){
//            continue;
//        }
//        if("0".equals(ch2[i+1]))
//        {
//          ch22[c2]=ch2[i];
//          c2++;
//          continue;
//        }
//        if("0".equals(ch2[i+2]))
//        {
//          ch22[c2]=ch2[i]+ch2[i+1];
//          i++;
//          c2++;
//          continue;
//        }
//        if("0".equals(ch2[i+3]))
//        {
//          ch22[c2]=ch2[i]+ch2[i+1]+ch2[i+2];
//          i+=2;
//          c2++;
//          continue;
//        }
//        if("0".equals(ch2[i+4]))
//        {
//          ch22[c2]=ch2[i]+ch2[i+1]+ch2[i+2]+ch2[i+3];
//          i+=3;
//          c2++;
//          continue;
//        }
//        if("0".equals(ch2[i+4]))
//        {
//          ch22[c2]=ch2[i]+ch2[i+1]+ch2[i+2]+ch2[i+3]+ch2[i+4];
//          i+=4;
//          c2++;
//          continue;
//        }
//     }
     
String []ch12=str1.split(" ",0);
String []ch22=str2.split(" ",0);



        ArrayList<Integer> demands=new ArrayList<Integer>();
     int size=0;
     for(String a : ch12){
        if(a != " " && a!=null){
            demands.add(size, Integer.parseInt(a));
            size++;
                    }
     }
      ArrayList<Integer> frequency=new ArrayList<Integer>();
     int size2=0;
     for(String a : ch22){
        if(a != " " && a !=null){
            frequency.add(size2, Integer.parseInt(a));
            size2++;
                    }
     }
 
  if(demands.size()==frequency.size()){
     // END OF TAKING INPUTS FROM USER
     //DEMANDS LIST OF INPUT
     // FREQUENCY LIST OF INPUT
      
     
     String[][] arr=new String[demands.size()][5];
     
    String[][] arr1=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum=0;
    for(int i=0;i<demands.size();i++){
       sum=sum+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr[i][0]=demands.get(i)+"";
       arr[i][1]=frequency.get(i)+"";
       arr[i][2]=frequency.get(i)/sum+"";
    }

  arr[0][3] = Float.parseFloat(arr[0][2])+"";
    for(int i=0;i<arr.length-1;i++){
       float num = (Float.parseFloat(arr[i][3]+""))+
                          (Float.parseFloat(arr[i+1][2]+""));
        arr[i+1][3]=num+"";
    }
    arr[0][4] = 1 +" to "+(int)(Float.parseFloat(arr[0][2])*100)+"";
            for (int i = 0; i <arr.length-1; i++) {
             arr[i+1][4] =(int)(Float.parseFloat(arr[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr[i+1][3])*100);
   
            }
    
       Random r=new Random();
        int sum_ave=0;
            for (int i = 0; i < arr1.length; i++) {
                arr1[i][0]=(i+1)+"";
                arr1[i][1]=r.nextInt(100)+"";
                sum_ave++;
            } 
            for(int i=0;i<arr1.length ;i++){
              if(Float.parseFloat(arr1[i][1]+"")< Float.parseFloat(arr[0][3]+"")*100 ){
                            arr1[i][2]=arr[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr1.length; i++) {
                for (int j = 1; j < arr.length; j++) {
                    if (Float.parseFloat(arr1[i][1]+"") < (Float.parseFloat(arr[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr1[i][1]+"") >(Float.parseFloat(arr[j-1][3]+"")*100)) {
                           arr1[i][2]=arr[j][0];
                        }
                    }
                }
            }
            
            float ave = 0;
            for (int i = 0; i < arr1.length; i++) {
                ave+=Float.parseFloat(arr1[i][2]+"");
            } 
            
              
 float expexteddailydemaand = 0;

              for (int i = 0; i < arr.length; i++) {
                expexteddailydemaand+=(Float.parseFloat(arr[i][0]+"")*Float.parseFloat(arr[i][2]+""));
            } 
              jTextField4.setText(expexteddailydemaand+"");

///////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////


           String[][] arr2=new String[demands.size()][5];
     
    String[][] arr12=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum2=0;
    for(int i=0;i<demands.size();i++){
       sum2=sum2+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr2[i][0]=demands.get(i)+"";
       arr2[i][1]=frequency.get(i)+"";
       arr2[i][2]=frequency.get(i)/sum2+"";
    }

  arr2[0][3] = Float.parseFloat(arr2[0][2])+"";
    for(int i=0;i<arr2.length-1;i++){
       float num2 = (Float.parseFloat(arr2[i][3]+""))+
                          (Float.parseFloat(arr2[i+1][2]+""));
        arr2[i+1][3]=num2+"";
    }
    arr2[0][4] = 1 +" to "+(int)(Float.parseFloat(arr2[0][2])*100)+"";
            for (int i = 0; i <arr2.length-1; i++) {
             arr2[i+1][4] =(int)(Float.parseFloat(arr2[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr2[i+1][3])*100);
   
            }
    
       Random r2=new Random();
        int sum_ave2=0;
            for (int i = 0; i < arr12.length; i++) {
                arr12[i][0]=(i+1)+"";
                arr12[i][1]=r2.nextInt(100)+"";
                sum_ave2++;
            } 
            for(int i=0;i<arr12.length ;i++){
              if(Float.parseFloat(arr12[i][1]+"")< Float.parseFloat(arr2[0][3]+"")*100 ){
                            arr12[i][2]=arr2[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr12.length; i++) {
                for (int j = 1; j < arr2.length; j++) {
                    if (Float.parseFloat(arr12[i][1]+"") < (Float.parseFloat(arr2[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr12[i][1]+"") >(Float.parseFloat(arr2[j-1][3]+"")*100)) {
                           arr12[i][2]=arr2[j][0];
                        }
                    }
                }
            }
            
            float ave2 = 0;
            for (int i = 0; i < arr12.length; i++) {
                ave2+=Float.parseFloat(arr12[i][2]+"");
            } 
          
              
    
           ///////////////////////////////////
           //////////////////////////////////
           
           String[][] arr3=new String[demands.size()][5];
     
    String[][] arr13=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum3=0;
    for(int i=0;i<demands.size();i++){
       sum3=sum3+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr3[i][0]=demands.get(i)+"";
       arr3[i][1]=frequency.get(i)+"";
       arr3[i][2]=frequency.get(i)/sum3+"";
    }

  arr3[0][3] = Float.parseFloat(arr3[0][2])+"";
    for(int i=0;i<arr3.length-1;i++){
       float num3 = (Float.parseFloat(arr3[i][3]+""))+
                          (Float.parseFloat(arr3[i+1][2]+""));
        arr3[i+1][3]=num3+"";
    }
    arr3[0][4] = 1 +" to "+(int)(Float.parseFloat(arr3[0][2])*100)+"";
            for (int i = 0; i <arr3.length-1; i++) {
             arr3[i+1][4] =(int)(Float.parseFloat(arr3[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr3[i+1][3])*100);
   
            }
    
       Random r3=new Random();
        int sum_ave3=0;
            for (int i = 0; i < arr13.length; i++) {
                arr13[i][0]=(i+1)+"";
                arr13[i][1]=r3.nextInt(100)+"";
                sum_ave3++;
            } 
            for(int i=0;i<arr13.length ;i++){
              if(Float.parseFloat(arr13[i][1]+"")< Float.parseFloat(arr3[0][3]+"")*100 ){
                            arr13[i][2]=arr3[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr13.length; i++) {
                for (int j = 1; j < arr3.length; j++) {
                    if (Float.parseFloat(arr13[i][1]+"") < (Float.parseFloat(arr3[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr13[i][1]+"") >(Float.parseFloat(arr3[j-1][3]+"")*100)) {
                           arr13[i][2]=arr3[j][0];
                        }
                    }
                }
            }
            
            float ave3 = 0;
            for (int i = 0; i < arr13.length; i++) {
                ave3+=Float.parseFloat(arr13[i][2]+"");
            } 
             

            /////////////////////////////////
            /////////////////////////////////
            /////////////////////////////////
            
            String[][] arr4=new String[demands.size()][5];
     
    String[][] arr14=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum4=0;
    for(int i=0;i<demands.size();i++){
       sum4=sum4+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr4[i][0]=demands.get(i)+"";
       arr4[i][1]=frequency.get(i)+"";
       arr4[i][2]=frequency.get(i)/sum4+"";
    }

  arr4[0][3] = Float.parseFloat(arr4[0][2])+"";
    for(int i=0;i<arr4.length-1;i++){
       float num = (Float.parseFloat(arr4[i][3]+""))+
                          (Float.parseFloat(arr4[i+1][2]+""));
        arr4[i+1][3]=num+"";
    }
    arr4[0][4] = 1 +" to "+(int)(Float.parseFloat(arr4[0][2])*100)+"";
            for (int i = 0; i <arr4.length-1; i++) {
             arr4[i+1][4] =(int)(Float.parseFloat(arr4[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr4[i+1][3])*100);
   
            }
    
       Random r4=new Random();
        int sum_ave4=0;
            for (int i = 0; i < arr14.length; i++) {
                arr14[i][0]=(i+1)+"";
                arr14[i][1]=r4.nextInt(100)+"";
                sum_ave4++;
            } 
            for(int i=0;i<arr14.length ;i++){
              if(Float.parseFloat(arr14[i][1]+"")< Float.parseFloat(arr4[0][3]+"")*100 ){
                            arr14[i][2]=arr4[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr14.length; i++) {
                for (int j = 1; j < arr4.length; j++) {
                    if (Float.parseFloat(arr14[i][1]+"") < (Float.parseFloat(arr4[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr14[i][1]+"") >(Float.parseFloat(arr4[j-1][3]+"")*100)) {
                           arr14[i][2]=arr4[j][0];
                        }
                    }
                }
            }
            
            float ave4 = 0;
            for (int i = 0; i < arr14.length; i++) {
                ave4+=Float.parseFloat(arr14[i][2]+"");
            } 
              
           //////////////////////////////////
           ///////////////////////////////////
           ///////////////////////////////////
           String[][] arr5=new String[demands.size()][5];
     
    String[][] arr15=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum5=0;
    for(int i=0;i<demands.size();i++){
       sum5=sum5+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr5[i][0]=demands.get(i)+"";
       arr5[i][1]=frequency.get(i)+"";
       arr5[i][2]=frequency.get(i)/sum5+"";
    }

  arr5[0][3] = Float.parseFloat(arr5[0][2])+"";
    for(int i=0;i<arr5.length-1;i++){
       float num5 = (Float.parseFloat(arr5[i][3]+""))+
                          (Float.parseFloat(arr5[i+1][2]+""));
        arr5[i+1][3]=num5+"";
    }
    arr5[0][4] = 1 +" to "+(int)(Float.parseFloat(arr5[0][2])*100)+"";
            for (int i = 0; i <arr5.length-1; i++) {
             arr5[i+1][4] =(int)(Float.parseFloat(arr5[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr5[i+1][3])*100);
   
            }
    
       Random r5=new Random();
        int sum_ave5=0;
            for (int i = 0; i < arr15.length; i++) {
                arr15[i][0]=(i+1)+"";
                arr15[i][1]=r5.nextInt(100)+"";
                sum_ave5++;
            } 
            for(int i=0;i<arr15.length ;i++){
              if(Float.parseFloat(arr15[i][1]+"")< Float.parseFloat(arr5[0][3]+"")*100 ){
                            arr15[i][2]=arr5[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr15.length; i++) {
                for (int j = 1; j < arr5.length; j++) {
                    if (Float.parseFloat(arr15[i][1]+"") < (Float.parseFloat(arr5[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr15[i][1]+"") >(Float.parseFloat(arr5[j-1][3]+"")*100)) {
                           arr15[i][2]=arr5[j][0];
                        }
                    }
                }
            }
            
            float ave5 = 0;
            for (int i = 0; i < arr15.length; i++) {
                ave5+=Float.parseFloat(arr15[i][2]+"");
            } 
              
           //////////////////////////////////////
           ///////////////////////////////////
           /////////////////////////////////////
           String[][] arr6=new String[demands.size()][5];
     
    String[][] arr16=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum6=0;
    for(int i=0;i<demands.size();i++){
       sum6=sum6+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr6[i][0]=demands.get(i)+"";
       arr6[i][1]=frequency.get(i)+"";
       arr6[i][2]=frequency.get(i)/sum6+"";
    }

  arr6[0][3] = Float.parseFloat(arr6[0][2])+"";
    for(int i=0;i<arr6.length-1;i++){
       float num6 = (Float.parseFloat(arr6[i][3]+""))+
                          (Float.parseFloat(arr6[i+1][2]+""));
        arr6[i+1][3]=num6+"";
    }
    arr6[0][4] = 1 +" to "+(int)(Float.parseFloat(arr6[0][2])*100)+"";
            for (int i = 0; i <arr6.length-1; i++) {
             arr6[i+1][4] =(int)(Float.parseFloat(arr6[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr6[i+1][3])*100);
   
            }
    
       Random r6=new Random();
        int sum_ave6=0;
            for (int i = 0; i < arr16.length; i++) {
                arr16[i][0]=(i+1)+"";
                arr16[i][1]=r6.nextInt(100)+"";
                sum_ave6++;
            } 
            for(int i=0;i<arr16.length ;i++){
              if(Float.parseFloat(arr16[i][1]+"")< Float.parseFloat(arr6[0][3]+"")*100 ){
                            arr16[i][2]=arr6[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr16.length; i++) {
                for (int j = 1; j < arr6.length; j++) {
                    if (Float.parseFloat(arr16[i][1]+"") < (Float.parseFloat(arr6[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr16[i][1]+"") >(Float.parseFloat(arr6[j-1][3]+"")*100)) {
                           arr16[i][2]=arr6[j][0];
                        }
                    }
                }
            }
            
            float ave6 = 0;
            for (int i = 0; i < arr16.length; i++) {
                ave6+=Float.parseFloat(arr16[i][2]+"");
            } 
               

           //////////////////////////////////
           //////////////////////////////////
           ////////////////////////////////////
           String[][] arr7=new String[demands.size()][5];
     
    String[][] arr17=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum7=0;
    for(int i=0;i<demands.size();i++){
       sum7=sum7+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr7[i][0]=demands.get(i)+"";
       arr7[i][1]=frequency.get(i)+"";
       arr7[i][2]=frequency.get(i)/sum7+"";
    }

  arr7[0][3] = Float.parseFloat(arr7[0][2])+"";
    for(int i=0;i<arr7.length-1;i++){
       float num7 = (Float.parseFloat(arr7[i][3]+""))+
                          (Float.parseFloat(arr7[i+1][2]+""));
        arr7[i+1][3]=num7+"";
    }
    arr7[0][4] = 1 +" to "+(int)(Float.parseFloat(arr7[0][2])*100)+"";
            for (int i = 0; i <arr7.length-1; i++) {
             arr7[i+1][4] =(int)(Float.parseFloat(arr7[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr7[i+1][3])*100);
   
            }
    
       Random r7=new Random();
        int sum_ave7=0;
            for (int i = 0; i < arr17.length; i++) {
                arr17[i][0]=(i+1)+"";
                arr17[i][1]=r7.nextInt(100)+"";
                sum_ave7++;
            } 
            for(int i=0;i<arr17.length ;i++){
              if(Float.parseFloat(arr17[i][1]+"")< Float.parseFloat(arr7[0][3]+"")*100 ){
                            arr17[i][2]=arr7[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr17.length; i++) {
                for (int j = 1; j < arr7.length; j++) {
                    if (Float.parseFloat(arr17[i][1]+"") < (Float.parseFloat(arr7[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr17[i][1]+"") >(Float.parseFloat(arr7[j-1][3]+"")*100)) {
                           arr17[i][2]=arr7[j][0];
                        }
                    }
                }
            }
            
            float ave7 = 0;
            for (int i = 0; i < arr17.length; i++) {
                ave7+=Float.parseFloat(arr17[i][2]+"");
            } 
              
            ///////////////////////////////
            ///////////////////////////////
            ///////////////////////////////////
            String[][] arr8=new String[demands.size()][5];
     
    String[][] arr18=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum8=0;
    for(int i=0;i<demands.size();i++){
       sum8=sum8+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr8[i][0]=demands.get(i)+"";
       arr8[i][1]=frequency.get(i)+"";
       arr8[i][2]=frequency.get(i)/sum8+"";
    }

  arr8[0][3] = Float.parseFloat(arr8[0][2])+"";
    for(int i=0;i<arr8.length-1;i++){
       float num8 = (Float.parseFloat(arr8[i][3]+""))+
                          (Float.parseFloat(arr8[i+1][2]+""));
        arr8[i+1][3]=num8+"";
    }
    arr8[0][4] = 1 +" to "+(int)(Float.parseFloat(arr8[0][2])*100)+"";
            for (int i = 0; i <arr8.length-1; i++) {
             arr8[i+1][4] =(int)(Float.parseFloat(arr8[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr8[i+1][3])*100);
   
            }
    
       Random r8=new Random();
        int sum_ave8=0;
            for (int i = 0; i < arr18.length; i++) {
                arr18[i][0]=(i+1)+"";
                arr18[i][1]=r8.nextInt(100)+"";
                sum_ave8++;
            } 
            for(int i=0;i<arr18.length ;i++){
              if(Float.parseFloat(arr18[i][1]+"")< Float.parseFloat(arr8[0][3]+"")*100 ){
                            arr18[i][2]=arr8[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr18.length; i++) {
                for (int j = 1; j < arr8.length; j++) {
                    if (Float.parseFloat(arr18[i][1]+"") < (Float.parseFloat(arr8[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr18[i][1]+"") >(Float.parseFloat(arr8[j-1][3]+"")*100)) {
                           arr18[i][2]=arr8[j][0];
                        }
                    }
                }
            }
            
            float ave8 = 0;
            for (int i = 0; i < arr18.length; i++) {
                ave8+=Float.parseFloat(arr18[i][2]+"");
            } 
               
/////////////////////////////////////////////
/////////////////////////////////////////////
/////////////////////////////////////////////
                      
                         String[][] arr9=new String[demands.size()][5];
     
    String[][] arr19=new String[Integer.parseInt(jTextField5.getText())][3];
     
    float sum9=0;
    for(int i=0;i<demands.size();i++){
       sum9=sum9+frequency.get(i);
    }
    
    for(int i=0;i<demands.size();i++){
       arr9[i][0]=demands.get(i)+"";
       arr9[i][1]=frequency.get(i)+"";
       arr9[i][2]=frequency.get(i)/sum9+"";
    }

  arr9[0][3] = Float.parseFloat(arr9[0][2])+"";
    for(int i=0;i<arr9.length-1;i++){
       float num9 = (Float.parseFloat(arr9[i][3]+""))+
                          (Float.parseFloat(arr9[i+1][2]+""));
        arr9[i+1][3]=num9+"";
    }
    arr9[0][4] = 1 +" to "+(int)(Float.parseFloat(arr9[0][2])*100)+"";
            for (int i = 0; i <arr9.length-1; i++) {
             arr9[i+1][4] =(int)(Float.parseFloat(arr9[i][3])*100+1) +" to "+
                           (int)(Float.parseFloat(arr9[i+1][3])*100);
   
            }
    
       Random r9=new Random();
        int sum_ave9=0;
            for (int i = 0; i < arr19.length; i++) {
                arr19[i][0]=(i+1)+"";
                arr19[i][1]=r9.nextInt(100)+"";
                sum_ave9++;
            } 
            for(int i=0;i<arr19.length ;i++){
              if(Float.parseFloat(arr19[i][1]+"")< Float.parseFloat(arr9[0][3]+"")*100 ){
                            arr19[i][2]=arr9[0][0];
              }
                  
            
            }
            for (int i = 0; i < arr19.length; i++) {
                for (int j = 1; j < arr9.length; j++) {
                    if (Float.parseFloat(arr19[i][1]+"") < (Float.parseFloat(arr9[j][3]+"")*100 )) {
                        if (Float.parseFloat(arr19[i][1]+"") >(Float.parseFloat(arr9[j-1][3]+"")*100)) {
                           arr19[i][2]=arr9[j][0];
                        }
                    }
                }
            }
            
            float ave9 = 0;
            for (int i = 0; i < arr19.length; i++) {
                ave9+=Float.parseFloat(arr19[i][2]+"");
            } 
               
           ////////////////////////////////////
           ////////////////////////////////////
           ////////////////////////////////////
           
           DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
              DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();

       ArrayList<Float> list=new ArrayList<Float>();
       list.add(ave/sum_ave);
       list.add(ave2/sum_ave2);list.add(ave3/sum_ave3);list.add(ave4/sum_ave4);list.add(ave5/sum_ave5);list.add(ave6/sum_ave6);list.add(ave7/sum_ave7);list.add(ave8/sum_ave8);list.add(ave9/sum_ave9);
   ArrayList<Float> list2=new ArrayList<Float>();
       for(int i=0;i<9;i++){
              list2.add(Math.abs(list.get(i)-expexteddailydemaand));
       }
       float min= list2.get(0);
       for(int i=0;i<9;i++){
             if(list2.get(i)<min)
                 min=list2.get(i);
       }
       int index=0;
       for(int i=0;i<9;i++){
              if(list2.get(i)==min){
                  index=i;
                  break;
              }
       }
       switch(index){
           case 0:for(int i=0;i<arr.length;i++){
   model.addRow(arr[i]);
   }
           for(int i=0;i<arr1.length;i++){
   model2.addRow(arr1[i]);
   } 
           break;
           case 1:for(int i=0;i<arr2.length;i++){
   model.addRow(arr2[i]);
   }
           for(int i=0;i<arr12.length;i++){
   model2.addRow(arr12[i]);
       
       }
           break;
           case 2:for(int i=0;i<arr3.length;i++){
   model.addRow(arr3[i]);
   }
           for(int i=0;i<arr1.length;i++){
   model2.addRow(arr13[i]);
   } 
           break;
           case 3:for(int i=0;i<arr4.length;i++){
   model.addRow(arr4[i]);
   }
           for(int i=0;i<arr14.length;i++){
   model2.addRow(arr14[i]);
   } 
           break;
           case 4:for(int i=0;i<arr5.length;i++){
   model.addRow(arr5[i]);
   }
           for(int i=0;i<arr15.length;i++){
   model2.addRow(arr15[i]);
   } 
           break;
           case 5:for(int i=0;i<arr6.length;i++){
   model.addRow(arr6[i]);
   }
           for(int i=0;i<arr16.length;i++){
   model2.addRow(arr16[i]);
   } 
           break;
           case 6:for(int i=0;i<arr7.length;i++){
   model.addRow(arr7[i]);
   }
           for(int i=0;i<arr17.length;i++){
   model2.addRow(arr17[i]);
   } 
           break;
           case 7:for(int i=0;i<arr8.length;i++){
   model.addRow(arr8[i]);
   }
           for(int i=0;i<arr18.length;i++){
   model2.addRow(arr18[i]);
   } 
           break;
           case 8:for(int i=0;i<arr9.length;i++){
   model.addRow(arr9[i]);
   }
           for(int i=0;i<arr19.length;i++){
   model2.addRow(arr19[i]);
   } 
           break;
   
       }
       jTextField3.setText(list.get(index)+"");
   
     
  }
  else JOptionPane.showMessageDialog(rootPane, "THE FREQUENCY DOESN'T EQUALS DEMANDS");
    
   
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
       model.setNumRows(0);
       model2.setNumRows(0);
       
       
       
       jTextField3.setText("");
       jTextField4.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    public javax.swing.JTable jTable2;
    public javax.swing.JTextField jTextField1;
    public javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
